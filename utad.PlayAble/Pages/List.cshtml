@page
@model ListModel
@{
    ViewData["Title"] = "playAble: Pesquisa de Jogos";
    var resultados = ViewData["resultados"] as List<Models.Game>;
    var cgeneros = ViewData["cgeneros"] as List<string>;
    var currentPage = ViewData["currentPage"] as int? ?? 1;
    var totalPages = ViewData["totalPages"] as int? ?? 1;
}

<div class="list-container">
    <div class="list-header">
        <div class="list-title">Pesquisa de Jogos</div>
        <div class="list-results-info">@ViewData["textoresultados"]</div>
        <div class="list-pagination">
            <button onclick="changePage(-1)" @if (currentPage == 1)
            {
                <text>disabled</text>
            }>⟨</button>
            <span>Página @currentPage de @totalPages</span>
            <button onclick="changePage(1)" @if (currentPage == totalPages)
            {
                <text>disabled</text>
            }>⟩</button>
        </div>
    </div>
    <div class="list-main">
        <!-- Sidebar Filters -->
        <aside class="list-sidebar">
            <div>
                <label for="sort">Ordenar por:</label>
                <select id="sort" onchange="updateSortQueryString()">
                    <option value="popular">Mais favoritados</option>
                    <option value="popular-inv">Menos favoritados</option>
                    <option value="alpha-az">Alfabeticamente (A-Z)</option>
                    <option value="alpha-za">Alfabeticamente (Z-A)</option>
                    <option value="data-desc">Mais recente para mais antigo</option>
                    <option value="data-asc">Mais antigo para mais recente</option>
                </select>
            </div>
            <div>
                <label for="npp">Resultados por página:</label>
                <select id="npp" onchange="updateNPPQueryString()">
                    <option value="15">15</option>
                    <option value="30">30</option>
                    <option value="60">60</option>
                    <option value="90">90</option>
                </select>
            </div>
            <div>
                <div class="filter-option">
                    <input type="checkbox" id="fav" class="star-checkbox" />
                    <label for="fav"><span style="font-size:1.3em;">★</span> Mostrar apenas jogos favoritos</label>
                </div>
            </div>
            @if (cgeneros != null && cgeneros.Count > 0)
            {
                <div>
                    <label>Géneros</label>
                    <div style="display:flex; flex-direction:column; gap:0.3rem;">
                        @foreach (var g in cgeneros)
                        {
                            <div class="filter-option">
                                <input type="checkbox" id="@g" />
                                <label for="@g">@g</label>
                            </div>
                        }
                    </div>
                </div>
            }
            <button onclick="updateFilterQueryString()">Aplicar filtros</button>
        </aside>
        <!-- Main Results -->
        <section class="list-results">
            @if (resultados == null || !resultados.Any())
            {
                <div class="recazul-texto" style="padding:2rem; text-align:center;">
                    <p>&lt; sem resultados &gt;</p>
                </div>
            }
            else
            {
                <div class="list-game-grid">
                    @foreach (var jogo in resultados)
                    {
                        <div class="list-game-card">
                            <a href="/game/@jogo.Path">
                                <img class="list-game-thumb" src="/games/@jogo.Path/playable-meta/thumb.png" alt="Imagem do jogo @jogo.Name" />
                            </a>
                            <div class="list-game-info">
                                <div class="list-game-title">
                                    <a href="/game/@jogo.Path">@jogo.Name</a>
                                </div>
                                <div class="list-game-desc">
                                    @jogo.Description
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </section>
    </div>
</div>



<script>
    function changePage(direction) {
        var url = new URL(window.location.href);
        var currentPage = parseInt(url.searchParams.get('np')) || 1;
        var newPage = currentPage + direction;
        url.searchParams.set('np', newPage);
        window.location.href = url.toString();
    }

    function updateSortQueryString() {
        var select = document.getElementById("sort");
        var selectedValue = select.value;
        var url = new URL(window.location.href);
        url.searchParams.set('sort', selectedValue);
        window.location.href = url.toString();
    }

    function updateNPPQueryString() {
        var select = document.getElementById("npp");
        var selectedValue = select.value;
        var url = new URL(window.location.href);
        url.searchParams.set('npp', selectedValue);
        window.location.href = url.toString();
    }

    function updateFilterQueryString() {
        var url = new URL(window.location.href);
        var generos = document.querySelectorAll('.seletorGeneros input:checked');
        var fav = document.getElementById("fav").checked;

        var generosIds = Array.from(generos).map(g => g.id);

        url.searchParams.set('generos', generosIds.join(';'));
        url.searchParams.set('favoritos', fav);

        window.location.href = url.toString();
    }


    function setSortSelection() {
        var url = new URL(window.location.href);
        var sortValue = url.searchParams.get('sort');
        if (sortValue) {
            var select = document.getElementById("sort");
            select.value = sortValue;
        }
    }

    function setNPPSelection() {
        var url = new URL(window.location.href);
        var resultsValue = url.searchParams.get('npp');
        if (resultsValue) {
            var select = document.getElementById("npp");
            select.value = resultsValue;
        }
    }

    function setFiltrosSelection() {
        var url = new URL(window.location.href);
        var generos = url.searchParams.get('generos');
        var fav = url.searchParams.get('favoritos');
        var autores = url.searchParams.get('autores');
        var editores = url.searchParams.get('editores');

        if (generos) {
            var generosIds = generos.split(';');
            generosIds.forEach(id => {
                var favInput = document.getElementById(id);
                if (favInput) {
                    favInput.checked = true;
                }
            });
        }
        
        if (fav) {
            var favInput = document.getElementById("fav");
            var account = document.getElementById('accountDropdown');
            
            if (account.innerHTML.includes("A minha conta")) {
                var currentUrl = encodeURIComponent(window.location.pathname + window.location.search);
                window.location.href = `/Identity/Account/Login?ReturnUrl=${currentUrl}`;
            } 
            
            if (favInput && fav === "true") {
                favInput.checked = true;
            }
        }

        if (autores) {
            var autoresIds = autores.split(';');
            autoresIds.forEach(id => {
                var input = document.getElementById(id);
                if (input) {
                    input.checked = true;
                }
            });
        }

        if (editores) {
            var editoresIds = editores.split(';');
            editoresIds.forEach(id => {
                var input = document.getElementById(id);
                if (input) {
                    input.checked = true;
                }
            });
        }
    
    }

    document.addEventListener("DOMContentLoaded", setSortSelection);
    document.addEventListener("DOMContentLoaded", setNPPSelection);
    document.addEventListener("DOMContentLoaded", setFiltrosSelection);
</script>