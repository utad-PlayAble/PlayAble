@page
@model ListModel
@{
    ViewData["Title"] = "playAble: Pesquisa de Jogos";
    var resultados = ViewData["resultados"] as List<Models.Game>;
    var cgeneros = ViewData["cgeneros"] as List<string>;
    var currentPage = ViewData["currentPage"] as int? ?? 1;
    var totalPages = ViewData["totalPages"] as int? ?? 1;
}

<style>
    .main-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 2rem;
        background: var(--light-color, #fff);
        border-radius: var(--border-radius, 16px);
        box-shadow: var(--box-shadow, 0 4px 24px rgba(0,0,0,0.08));
        font-family: 'Raleway', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .grid-titleautores {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        color: var(--primary-color, #4a6fa5);
        text-align: center;
        font-family: 'Raleway', sans-serif;
        letter-spacing: 1px;
    }

    .primeiralinha, .segundalinha {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
        gap: 2rem;
    }

    .bookstxt, .bookstitle {
        color: var(--dark-color, #343a40);
        font-family: 'Raleway', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-weight: 600;
    }

    .pageCounter {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-family: 'Raleway', sans-serif;
    }

    .buttonreq {
        background: var(--primary-color, #4a6fa5);
        color: #fff;
        border: none;
        border-radius: var(--border-radius, 8px);
        padding: 0.5rem 1.2rem;
        font-size: 1rem;
        font-family: 'Raleway', sans-serif;
        font-weight: 700;
        cursor: pointer;
        transition: background 0.2s;
        margin: 0.2rem 0;
        box-shadow: var(--box-shadow, 0 4px 6px rgba(0,0,0,0.1));
    }

        .buttonreq:disabled, .buttonreq[disabled] {
            background: #bdc3c7;
            cursor: not-allowed;
            color: #fff;
        }

        .buttonreq:hover:not(:disabled) {
            background: var(--secondary-color, #ff7e5f);
            color: #fff;
        }

    .booksselect {
        border-radius: var(--border-radius, 8px);
        border: 1px solid var(--primary-color, #4a6fa5);
        padding: 0.3rem 0.8rem;
        font-size: 1rem;
        margin-left: 0.5rem;
        background: #fff;
        color: var(--dark-color, #343a40);
        font-family: 'Raleway', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-weight: 600;
    }

    .filtros {
        margin-top: 1.2rem;
        margin-bottom: 1.2rem;
    }

    .filter-option {
        margin-bottom: 0.3rem;
        font-family: 'Raleway', sans-serif;
    }

    .grid-book {
        background: var(--light-color, #fff);
        border-radius: var(--border-radius, 8px);
        box-shadow: var(--box-shadow, 0 2px 8px rgba(44,62,80,0.07));
        padding: 1rem;
        margin-bottom: 1.2rem;
        display: flex;
        gap: 1.2rem;
        align-items: flex-start;
        transition: box-shadow 0.2s, transform 0.2s;
        font-family: 'Raleway', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

        .grid-book:hover {
            box-shadow: 0 6px 24px rgba(44,62,80,0.13);
            transform: translateY(-4px) scale(1.01);
        }

        .grid-book img {
            border-radius: var(--border-radius, 8px);
            box-shadow: 0 1px 4px rgba(44,62,80,0.10);
            width: 120px;
            height: auto;
            object-fit: cover;
            background: #eaeaea;
        }

        .grid-book > div {
            flex: 1;
        }

        .grid-book a {
            color: var(--primary-color, #4a6fa5);
            font-weight: 700;
            text-decoration: none;
            font-size: 1.1rem;
            font-family: 'Raleway', sans-serif;
        }

            .grid-book a:hover {
                color: var(--secondary-color, #ff7e5f);
                text-decoration: underline;
            }

    .left-column2 {
        flex: 0 0 260px;
        max-width: 260px;
        margin-right: 2rem;
        font-family: 'Raleway', sans-serif;
    }

    .right-column2 {
        flex: 1;
        min-width: 0;
    }

    
</style>

<div class="main-container">
    <div class="grid-titleautores">
        Pesquisa de Jogos
    </div>

    <div class="primeiralinha">
        <div class="bookstxt left-column">@ViewData["textoresultados"]</div>
        <div class="pageCounter right-column">
            <button class="buttonreq" onclick="changePage(-1)" @(currentPage == 1 ? "disabled" : "")>&lt;</button>
            <span>Página @currentPage de @totalPages</span>
            <button class="buttonreq" onclick="changePage(1)" @(currentPage == totalPages ? "disabled" : "")>&gt;</button>
        </div>
    </div>

    <div class="segundalinha">
        <div class="left-column2">
            <div class="seletorOrdenarPor" style="margin-bottom:1rem;">
                <label class="bookstitle" for="sort">Ordenar por:</label>
                <select id="sort" class="booksselect" onchange="updateSortQueryString()">
                    <option value="popular">Mais favoritados</option>
                    <option value="popular-inv">Menos favoritados</option>
                    <option value="alpha-az">Alfabeticamente (A-Z)</option>
                    <option value="alpha-za">Alfabeticamente (Z-A)</option>
                    <option value="data-desc">Mais recente para mais antigo</option>
                    <option value="data-asc">Mais antigo para mais recente</option>
                </select>
            </div>
            <div class="seletorNresultados" style="margin-bottom:1rem;">
                <label class="bookstitle" for="npp">Resultados por página:</label>
                <select id="npp" class="booksselect" onchange="updateNPPQueryString()">
                    <option value="15">15</option>
                    <option value="30">30</option>
                    <option value="60">60</option>
                    <option value="90">90</option>
                </select>
            </div>
            <div class="filtros">
                @if (cgeneros != null && cgeneros.Count > 0)
                {
                    <div class="filtro seletorGeneros">
                        <label class="bookstitle">Géneros</label>
                        @foreach (var g in cgeneros)
                        {
                            <div class="filter-option">
                                <input type="checkbox" id="@g">
                                <label class="bookstxt" for="@g">@g</label>
                            </div>
                        }
                    </div>
                }
            </div>
            <button class="buttonreq" style="width:100%;margin-top:1rem;" onclick="updateFilterQueryString()">Aplicar filtros</button>
        </div>
        <div class="right-column2">
            @if (resultados == null || !resultados.Any())
            {
                <p class="bookstxt" style="text-align:center;color:#888;">&lt; sem resultados &gt;</p>
            }
            else
            {
                @foreach (var jogo in resultados)
                {
                    <div class="grid-book">
                        <div>
                            <a href="/game/@jogo.Path">
                                <img src="/games/@jogo.Path/playable-meta/thumb.png" alt="Imagem do jogo @jogo.Name" />
                            </a>
                        </div>
                        <div>
                            <a href="/game/@jogo.Path">@jogo.Name</a>
                            <div class="bookstxt" style="margin-top:0.5rem;">@jogo.Description</div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

<script>
    function changePage(direction) {
        var url = new URL(window.location.href);
        var currentPage = parseInt(url.searchParams.get('np')) || 1;
        var newPage = currentPage + direction;
        url.searchParams.set('np', newPage);
        window.location.href = url.toString();
    }

    function updateSortQueryString() {
        var select = document.getElementById("sort");
        var selectedValue = select.value;
        var url = new URL(window.location.href);
        url.searchParams.set('sort', selectedValue);
        window.location.href = url.toString();
    }

    function updateNPPQueryString() {
        var select = document.getElementById("npp");
        var selectedValue = select.value;
        var url = new URL(window.location.href);
        url.searchParams.set('npp', selectedValue);
        window.location.href = url.toString();
    }

    function updateFilterQueryString() {
        var url = new URL(window.location.href);
        var generos = document.querySelectorAll('.seletorGeneros input:checked');

        var generosIds = Array.from(generos).map(g => g.id);

        url.searchParams.set('generos', generosIds.join(';'));

        window.location.href = url.toString();
    }

    function setSortSelection() {
        var url = new URL(window.location.href);
        var sortValue = url.searchParams.get('sort');
        if (sortValue) {
            var select = document.getElementById("sort");
            select.value = sortValue;
        }
    }

    function setNPPSelection() {
        var url = new URL(window.location.href);
        var resultsValue = url.searchParams.get('npp');
        if (resultsValue) {
            var select = document.getElementById("npp");
            select.value = resultsValue;
        }
    }

    function setFiltrosSelection() {
        var url = new URL(window.location.href);
        var generos = url.searchParams.get('generos');
        var autores = url.searchParams.get('autores');
        var editores = url.searchParams.get('editores');

        if (generos) {
            var generosIds = generos.split(';');
            generosIds.forEach(id => {
                var input = document.getElementById(id);
                if (input) {
                    input.checked = true;
                }
            });
        }

        if (autores) {
            var autoresIds = autores.split(';');
            autoresIds.forEach(id => {
                var input = document.getElementById(id);
                if (input) {
                    input.checked = true;
                }
            });
        }

        if (editores) {
            var editoresIds = editores.split(';');
            editoresIds.forEach(id => {
                var input = document.getElementById(id);
                if (input) {
                    input.checked = true;
                }
            });
        }
    }

    document.addEventListener("DOMContentLoaded", setSortSelection);
    document.addEventListener("DOMContentLoaded", setNPPSelection);
    document.addEventListener("DOMContentLoaded", setFiltrosSelection);
</script>